diff --git a/SibersProjectManager/Controllers/EmployeesController.cs b/SibersProjectManager/Controllers/EmployeesController.cs
index bc8bb44..387d411 100644
--- a/SibersProjectManager/Controllers/EmployeesController.cs
+++ b/SibersProjectManager/Controllers/EmployeesController.cs
@@ -1,4 +1,5 @@
 using Asp.Versioning;
+using Microsoft.AspNetCore.Authorization;
 using Microsoft.AspNetCore.Mvc;
 using SibersProjectManager.Interfaces;
 using SibersProjectManager.Models;
@@ -8,6 +9,7 @@ namespace SibersProjectManager.Controllers
     [ApiController]
     [ApiVersion(1)]
     [Route("api/v{version:apiVersion}/employees")]
+    [Authorize(Roles = "Administrator")]
     [Produces("application/json")]
     [Consumes("application/json")]
     [ProducesResponseType(typeof(string), StatusCodes.Status400BadRequest)]
diff --git a/SibersProjectManager/Controllers/ProjectsController.cs b/SibersProjectManager/Controllers/ProjectsController.cs
index 4b58ec8..dd9ba13 100644
--- a/SibersProjectManager/Controllers/ProjectsController.cs
+++ b/SibersProjectManager/Controllers/ProjectsController.cs
@@ -1,4 +1,5 @@
 using Asp.Versioning;
+using Microsoft.AspNetCore.Authorization;
 using Microsoft.AspNetCore.Mvc;
 using SibersProjectManager.Interfaces;
 using SibersProjectManager.Models;
@@ -9,6 +10,7 @@ namespace SibersProjectManager.Controllers
     [ApiController]
     [ApiVersion(1)]
     [Route("api/v{version:apiVersion}/projects")]
+    [Authorize(Roles = "Administrator,ProjectManager")]
     [Produces("application/json")]
     [Consumes("application/json")]
     [ProducesResponseType(typeof(string), StatusCodes.Status400BadRequest)]
diff --git a/SibersProjectManager/Controllers/TaskController.cs b/SibersProjectManager/Controllers/TaskController.cs
index b1ac343..d3932ec 100644
--- a/SibersProjectManager/Controllers/TaskController.cs
+++ b/SibersProjectManager/Controllers/TaskController.cs
@@ -1,4 +1,5 @@
 using Asp.Versioning;
+using Microsoft.AspNetCore.Authorization;
 using Microsoft.AspNetCore.Mvc;
 using SibersProjectManager.Interfaces;
 using SibersProjectManager.Models;
@@ -9,6 +10,7 @@ namespace SibersProjectManager.Controllers
     [ApiController]
     [ApiVersion(1)]
     [Route("api/v{version:apiVersion}/tasks")]
+    [Authorize]
     [Produces("application/json")]
     [Consumes("application/json")]
     [ProducesResponseType(typeof(string), StatusCodes.Status400BadRequest)]
diff --git a/SibersProjectManager/Data/AppDbContext.cs b/SibersProjectManager/Data/AppDbContext.cs
index ab9c962..1efce80 100644
--- a/SibersProjectManager/Data/AppDbContext.cs
+++ b/SibersProjectManager/Data/AppDbContext.cs
@@ -1,10 +1,11 @@
+using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
 using Microsoft.EntityFrameworkCore;
 using SibersProjectManager.Models;
 using SibersProjectManager.Models.Enums;
 
 namespace SibersProjectManager.Data
 {
-    internal sealed class AppDbContext(DbContextOptions<AppDbContext> options) : DbContext(options)
+    internal sealed class AppDbContext(DbContextOptions<AppDbContext> options) : IdentityDbContext(options)
     {
         public DbSet<Employee> Employees { get; set; }
         public DbSet<Project> Projects { get; set; }
@@ -110,10 +111,20 @@ namespace SibersProjectManager.Data
             modelBuilder.Entity<Employee>()
                 .Property(e => e.LeadingProjects)
                 .HasColumnName("leading_projects");
-            
+
             modelBuilder.Entity<Employee>()
                 .Property(e => e.ProjectEmployees)
                 .HasColumnName("project_employees");
+
+            modelBuilder.Entity<Employee>()
+                .Property(e => e.ApplicationUserId)
+                .HasColumnName("application_user_id");
+
+            modelBuilder.Entity<Employee>()
+                .HasOne(e => e.ApplicationUser)
+                .WithOne()
+                .HasForeignKey<Employee>(e => e.ApplicationUserId)
+                .OnDelete(DeleteBehavior.Cascade);
         }
 
         private void OnProjectEmployeeCreating(ModelBuilder modelBuilder)
@@ -218,7 +229,7 @@ namespace SibersProjectManager.Data
                 .HasOne(t => t.Assignee)
                 .WithMany(e => e.AssignedTasks)
                 .HasForeignKey(t => t.AssigneeId)
-                .OnDelete(DeleteBehavior.Restrict);
+                .OnDelete(DeleteBehavior.SetNull);
         }
 
         protected override void OnModelCreating(ModelBuilder modelBuilder)
diff --git a/SibersProjectManager/Data/SeedData.cs b/SibersProjectManager/Data/SeedData.cs
index fe05e42..0a8b496 100644
--- a/SibersProjectManager/Data/SeedData.cs
+++ b/SibersProjectManager/Data/SeedData.cs
@@ -1,4 +1,4 @@
-using Microsoft.EntityFrameworkCore;
+using Microsoft.AspNetCore.Identity;
 using SibersProjectManager.Models;
 using SibersProjectManager.Models.Enums;
 
@@ -6,18 +6,67 @@ namespace SibersProjectManager.Data
 {
     internal static class SeedData
     {
-        public static void Initialize(IServiceProvider serviceProvider)
+        public static async Task InitializeAsync(IServiceProvider serviceProvider)
         {
-            using var context = new AppDbContext(serviceProvider.GetRequiredService<DbContextOptions<AppDbContext>>());
+            using var scope = serviceProvider.CreateScope();
+            var context = scope.ServiceProvider.GetRequiredService<AppDbContext>();
+            var userManager = scope.ServiceProvider.GetRequiredService<UserManager<ApplicationUser>>();
+            var roleManager = scope.ServiceProvider.GetRequiredService<RoleManager<IdentityRole>>();
+
+            var roles = new[] { "Administrator", "ProjectManager", "Employee" };
+            foreach (var role in roles)
+            {
+                if (!await roleManager.RoleExistsAsync(role))
+                {
+                    await roleManager.CreateAsync(new IdentityRole(role));
+                }
+            }
 
             if (context.Employees.Any())
                 return;
 
+            var adminUser = new ApplicationUser
+            {
+                UserName = "admin@gmail.com",
+                Email = "admin@gmail.com",
+                EmailConfirmed = true
+            };
+            var managerUser = new ApplicationUser
+            {
+                UserName = "manager@gmail.com",
+                Email = "manager@gmail.com",
+                EmailConfirmed = true
+            };
+            var employeeUser = new ApplicationUser
+            {
+                UserName = "employee@gmail.com",
+                Email = "employee@gmail.com",
+                EmailConfirmed = true
+            };
+
+            if (await userManager.FindByEmailAsync(adminUser.Email) == null)
+            {
+                await userManager.CreateAsync(adminUser, "Admin@123");
+                await userManager.AddToRoleAsync(adminUser, "Administrator");
+            }
+
+            if (await userManager.FindByEmailAsync(managerUser.Email) == null)
+            {
+                await userManager.CreateAsync(managerUser, "Manager@123");
+                await userManager.AddToRoleAsync(managerUser, "ProjectManager");
+            }
+
+            if (await userManager.FindByEmailAsync(employeeUser.Email) == null)
+            {
+                await userManager.CreateAsync(employeeUser, "Employee@123");
+                await userManager.AddToRoleAsync(employeeUser, "Employee");
+            }
+
             var employees = new List<Employee>
             {
-                new() { FirstName = "Ryan", LastName = "Thomas", Patronymic = "Gosling", Email = "Ryan@gmail.com" },
-                new() { FirstName = "Pedro", LastName = "Pascal", Patronymic = "Balmaceda", Email = "Pedro@gmail.com" },
-                new() { FirstName = "Harry", LastName = "Potter", Patronymic = "Wizard", Email = "Harry@gmail.com" }
+                new() { FirstName = "Ryan", LastName = "Thomas", Patronymic = "Gosling", Email = "admin@gmail.com", ApplicationUserId = adminUser.Id },
+                new() { FirstName = "Pedro", LastName = "Pascal", Patronymic = "Balmaceda", Email = "manager@gmail.com", ApplicationUserId = managerUser.Id },
+                new() { FirstName = "Harry", LastName = "Potter", Patronymic = "Wizard", Email = "employee@gmail.com", ApplicationUserId = employeeUser.Id }
             };
 
             context.Employees.AddRange(employees);
@@ -26,7 +75,7 @@ namespace SibersProjectManager.Data
             var project = new Project
             {
                 Name = "Sibers Project Manager",
-                CustomerCompany = "Sibers",
+                CustomerCompany = "gmail",
                 ContractorCompany = "Blue Sky",
                 StartDate = DateTime.Now,
                 EndDate = DateTime.Now.AddDays(7),
diff --git a/SibersProjectManager/Models/Employee.cs b/SibersProjectManager/Models/Employee.cs
index ae3503a..de17a30 100644
--- a/SibersProjectManager/Models/Employee.cs
+++ b/SibersProjectManager/Models/Employee.cs
@@ -1,4 +1,5 @@
 using System.ComponentModel.DataAnnotations;
+using System.ComponentModel.DataAnnotations.Schema;
 
 namespace SibersProjectManager.Models
 {
@@ -18,6 +19,11 @@ namespace SibersProjectManager.Models
         [Required, EmailAddress]
         public string Email { get; init; } = string.Empty;
 
+        public string ApplicationUserId { get; set; } = string.Empty;
+
+        [ForeignKey(nameof(ApplicationUserId))]
+        public ApplicationUser ApplicationUser {get; set;} = new();
+
         public ICollection<Project> LeadingProjects { get; init; } = [];
         public ICollection<ProjectEmployee> ProjectEmployees { get; init; } = [];
         public ICollection<ProjectTask> AuthoredTasks { get; init; } = [];
diff --git a/SibersProjectManager/Models/ProjectTask.cs b/SibersProjectManager/Models/ProjectTask.cs
index 4d61dbf..f1e1c6c 100644
--- a/SibersProjectManager/Models/ProjectTask.cs
+++ b/SibersProjectManager/Models/ProjectTask.cs
@@ -19,7 +19,7 @@ namespace SibersProjectManager.Models
         public Employee Author { get; init; } = new();
 
         public int? AssigneeId { get; set; }
-        public Employee Assignee { get; init; } = new();
+        public Employee? Assignee { get; init; } = new();
 
         public int ProjectId { get; init; }
         public Project Project { get; init; } = new();
diff --git a/SibersProjectManager/Program.cs b/SibersProjectManager/Program.cs
index 9b95d35..cb96c57 100644
--- a/SibersProjectManager/Program.cs
+++ b/SibersProjectManager/Program.cs
@@ -1,8 +1,11 @@
+using System.Threading.Tasks;
 using Asp.Versioning;
+using Microsoft.AspNetCore.Identity;
 using Microsoft.EntityFrameworkCore;
 using Serilog;
 using SibersProjectManager.Data;
 using SibersProjectManager.Interfaces;
+using SibersProjectManager.Models;
 using SibersProjectManager.Services;
 
 var builder = WebApplication.CreateBuilder(args);
@@ -11,8 +14,6 @@ LoggerConfiguration();
 ApiVersioningSetup(builder.Services);
 ServiceRegistration(builder.Services);
 
-builder.Services.AddControllersWithViews();
-
 var app = builder.Build();
 
 if (!app.Environment.IsDevelopment())
@@ -24,6 +25,7 @@ if (!app.Environment.IsDevelopment())
 app.UseHttpsRedirection();
 app.UseRouting();
 
+app.UseAuthentication();
 app.UseAuthorization();
 
 app.MapStaticAssets();
@@ -35,13 +37,13 @@ app.MapControllerRoute(
 
 
 app.Run();
-SetSeedData(app);
+await SetSeedData(app);
 
-void SetSeedData(WebApplication app)
+async Task SetSeedData(WebApplication app)
 {
     using var scope = app.Services.CreateScope();
     var services = scope.ServiceProvider;
-    SeedData.Initialize(services);
+    await SeedData.InitializeAsync(services);
 }
 
 void ApiVersioningSetup(IServiceCollection services)
@@ -68,9 +70,18 @@ void ServiceRegistration(IServiceCollection services)
     services.AddDbContext<AppDbContext>(options =>
         options.UseSqlite(builder.Configuration.GetConnectionString("DefaultConnection")));
 
+    services.AddHttpContextAccessor();
+
+    services.AddControllersWithViews();
+
+    services.AddIdentity<ApplicationUser, IdentityRole>()
+        .AddEntityFrameworkStores<AppDbContext>()
+        .AddDefaultTokenProviders();
+
     services.AddScoped<IEmployeeService, EmployeeService>();
     services.AddScoped<IProjectService, ProjectService>();
     services.AddScoped<ITaskService, TaskService>();
+    services.AddScoped<IUserContextService, UserContextService>();
 }
 
 void LoggerConfiguration()
diff --git a/SibersProjectManager/Services/TaskService.cs b/SibersProjectManager/Services/TaskService.cs
index 3a945b8..ffcab9a 100644
--- a/SibersProjectManager/Services/TaskService.cs
+++ b/SibersProjectManager/Services/TaskService.cs
@@ -8,10 +8,12 @@ namespace SibersProjectManager.Services
 {
     internal sealed class TaskService(
         AppDbContext appDbContext,
-        ILogger<TaskService> logger) : ITaskService
+        ILogger<TaskService> logger,
+        IUserContextService userContextService) : ITaskService
     {
         private readonly AppDbContext _context = appDbContext;
         private readonly ILogger<TaskService> _logger = logger;
+        private readonly IUserContextService _userContextService = userContextService;
         private const int _pageSize = 10;
 
         public async Task<Result<IReadOnlyCollection<ProjectTask>>> GetAsync(
@@ -20,17 +22,47 @@ namespace SibersProjectManager.Services
             if (page < 1)
                 page = 1;
 
+            var userId = _userContextService.GetCurrentUserId();
+            if (string.IsNullOrWhiteSpace(userId))
+            {
+                _logger.LogWarning("Unauthorized access attempt");
+                return Result<IReadOnlyCollection<ProjectTask>>.Failure("User is not authorized");
+            }
+
             var query = _context.ProjectTasks
                 .Include(t => t.Author)
                 .Include(t => t.Assignee)
                 .Include(t => t.Project)
                 .AsQueryable();
 
+            query = query.Where(t => t.ProjectId == projectId);
+
             if (status.HasValue)
                 query = query.Where(t => t.Status == status);
 
+            if (await _userContextService.IsInRoleAsync("Employee"))
+            {
+                if (int.TryParse(userId, out var userIdAsInt))
+                {
+                    query = query.Where(t => t.AssigneeId == userIdAsInt);
+                }
+                else
+                {
+                    _logger.LogWarning("Failed to parse userId [{UserId}] to int", userId);
+                    return Result<IReadOnlyCollection<ProjectTask>>.Failure("Invalid user ID");
+                }
+            }
+            else if (await _userContextService.IsInRoleAsync("ProjectManager"))
+            {
+                var projects = await _context.Projects
+                    .Where(p => p.ProjectManager.ApplicationUserId == userId)
+                    .Select(p => p.Id)
+                    .ToListAsync();
+
+                query = query.Where(t => projects.Contains(t.ProjectId));
+            }
+
             var tasks = await query
-                .Where(t => t.ProjectId == projectId)
                 .Skip((page - 1) * _pageSize)
                 .Take(_pageSize)
                 .AsNoTracking()
@@ -39,7 +71,7 @@ namespace SibersProjectManager.Services
             if (!tasks.Any())
             {
                 _logger.LogWarning("No tasks found for project [{ProjectId}] on page [{Page}]", projectId, page);
-                return Result<IReadOnlyCollection<ProjectTask>>.Failure($"No tasks found for project [{projectId}] on page [{page}]");
+                return Result<IReadOnlyCollection<ProjectTask>>.Success([]);
             }
 
             return Result<IReadOnlyCollection<ProjectTask>>.Success(tasks.AsReadOnly());
diff --git a/SibersProjectManager/SibersProjectManager.csproj b/SibersProjectManager/SibersProjectManager.csproj
index 25b942c..da84f33 100644
--- a/SibersProjectManager/SibersProjectManager.csproj
+++ b/SibersProjectManager/SibersProjectManager.csproj
@@ -9,6 +9,7 @@
   <ItemGroup>
     <PackageReference Include="Asp.Versioning.Mvc" Version="8.1.0" />
     <PackageReference Include="Asp.Versioning.Mvc.ApiExplorer" Version="8.1.0" />
+    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="9.0.3" />
     <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="9.0.3" />
     <PackageReference Include="Serilog.Settings.Configuration" Version="9.0.0" />
     <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
diff --git a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfo.cs b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfo.cs
index d82d5b7..efccbbb 100644
--- a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfo.cs
+++ b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfo.cs
@@ -13,7 +13,7 @@ using System.Reflection;
 [assembly: System.Reflection.AssemblyCompanyAttribute("SibersProjectManager")]
 [assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
 [assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
-[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+c9983f07af917db5a0a421808c399b40bf6dece8")]
+[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+1e54cfa3e45df9250d14949b064b6e046658c12b")]
 [assembly: System.Reflection.AssemblyProductAttribute("SibersProjectManager")]
 [assembly: System.Reflection.AssemblyTitleAttribute("SibersProjectManager")]
 [assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
diff --git a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfoInputs.cache b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfoInputs.cache
index 53d32b9..a44e4b2 100644
--- a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfoInputs.cache
+++ b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfoInputs.cache
@@ -1 +1 @@
-f0a63dce78d71a5fd46b55952c251e3b37ba4d2a096f21e417634ac0628ec294
+6294ae3d2f1fb1856596ba184bdca4491b19a4eb56058180bac55bb08e8f82da
diff --git a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.assets.cache b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.assets.cache
index c6f4f2d..2c8dcfa 100644
Binary files a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.assets.cache and b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.assets.cache differ
diff --git a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.csproj.AssemblyReference.cache b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.csproj.AssemblyReference.cache
index 2115d9d..b0e638b 100644
Binary files a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.csproj.AssemblyReference.cache and b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.csproj.AssemblyReference.cache differ
diff --git a/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.dgspec.json b/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.dgspec.json
index 3b3b1f7..10dd9a3 100644
--- a/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.dgspec.json
+++ b/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.dgspec.json
@@ -58,6 +58,10 @@
               "target": "Package",
               "version": "[8.1.0, )"
             },
+            "Microsoft.AspNetCore.Identity.EntityFrameworkCore": {
+              "target": "Package",
+              "version": "[9.0.3, )"
+            },
             "Microsoft.EntityFrameworkCore.Sqlite": {
               "target": "Package",
               "version": "[9.0.3, )"
diff --git a/SibersProjectManager/obj/project.assets.json b/SibersProjectManager/obj/project.assets.json
index 84c2fec..3184337 100644
--- a/SibersProjectManager/obj/project.assets.json
+++ b/SibersProjectManager/obj/project.assets.json
@@ -69,6 +69,52 @@
           }
         }
       },
+      "Microsoft.AspNetCore.Cryptography.Internal/9.0.3": {
+        "type": "package",
+        "compile": {
+          "lib/net9.0/Microsoft.AspNetCore.Cryptography.Internal.dll": {
+            "related": ".xml"
+          }
+        },
+        "runtime": {
+          "lib/net9.0/Microsoft.AspNetCore.Cryptography.Internal.dll": {
+            "related": ".xml"
+          }
+        }
+      },
+      "Microsoft.AspNetCore.Cryptography.KeyDerivation/9.0.3": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.AspNetCore.Cryptography.Internal": "9.0.3"
+        },
+        "compile": {
+          "lib/net9.0/Microsoft.AspNetCore.Cryptography.KeyDerivation.dll": {
+            "related": ".xml"
+          }
+        },
+        "runtime": {
+          "lib/net9.0/Microsoft.AspNetCore.Cryptography.KeyDerivation.dll": {
+            "related": ".xml"
+          }
+        }
+      },
+      "Microsoft.AspNetCore.Identity.EntityFrameworkCore/9.0.3": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore.Relational": "9.0.3",
+          "Microsoft.Extensions.Identity.Stores": "9.0.3"
+        },
+        "compile": {
+          "lib/net9.0/Microsoft.AspNetCore.Identity.EntityFrameworkCore.dll": {
+            "related": ".xml"
+          }
+        },
+        "runtime": {
+          "lib/net9.0/Microsoft.AspNetCore.Identity.EntityFrameworkCore.dll": {
+            "related": ".xml"
+          }
+        }
+      },
       "Microsoft.Data.Sqlite.Core/9.0.3": {
         "type": "package",
         "dependencies": {
@@ -315,6 +361,42 @@
           "buildTransitive/net8.0/_._": {}
         }
       },
+      "Microsoft.Extensions.Identity.Core/9.0.3": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.AspNetCore.Cryptography.KeyDerivation": "9.0.3",
+          "Microsoft.Extensions.Logging": "9.0.3",
+          "Microsoft.Extensions.Options": "9.0.3"
+        },
+        "compile": {
+          "lib/net9.0/Microsoft.Extensions.Identity.Core.dll": {
+            "related": ".xml"
+          }
+        },
+        "runtime": {
+          "lib/net9.0/Microsoft.Extensions.Identity.Core.dll": {
+            "related": ".xml"
+          }
+        }
+      },
+      "Microsoft.Extensions.Identity.Stores/9.0.3": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Caching.Abstractions": "9.0.3",
+          "Microsoft.Extensions.Identity.Core": "9.0.3",
+          "Microsoft.Extensions.Logging": "9.0.3"
+        },
+        "compile": {
+          "lib/net9.0/Microsoft.Extensions.Identity.Stores.dll": {
+            "related": ".xml"
+          }
+        },
+        "runtime": {
+          "lib/net9.0/Microsoft.Extensions.Identity.Stores.dll": {
+            "related": ".xml"
+          }
+        }
+      },
       "Microsoft.Extensions.Logging/9.0.3": {
         "type": "package",
         "dependencies": {
@@ -685,6 +767,59 @@
         "lib/net8.0/Asp.Versioning.Mvc.ApiExplorer.xml"
       ]
     },
+    "Microsoft.AspNetCore.Cryptography.Internal/9.0.3": {
+      "sha512": "tKXLFMMefKRyDbbVJM+5Gtd1CgPS6vwc9yTLnaStT9+DmkI6iFrEOdKMjZt5q3ijqQVjWew0/EcB9EbEKeP0DA==",
+      "type": "package",
+      "path": "microsoft.aspnetcore.cryptography.internal/9.0.3",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net462/Microsoft.AspNetCore.Cryptography.Internal.dll",
+        "lib/net462/Microsoft.AspNetCore.Cryptography.Internal.xml",
+        "lib/net9.0/Microsoft.AspNetCore.Cryptography.Internal.dll",
+        "lib/net9.0/Microsoft.AspNetCore.Cryptography.Internal.xml",
+        "lib/netstandard2.0/Microsoft.AspNetCore.Cryptography.Internal.dll",
+        "lib/netstandard2.0/Microsoft.AspNetCore.Cryptography.Internal.xml",
+        "microsoft.aspnetcore.cryptography.internal.9.0.3.nupkg.sha512",
+        "microsoft.aspnetcore.cryptography.internal.nuspec"
+      ]
+    },
+    "Microsoft.AspNetCore.Cryptography.KeyDerivation/9.0.3": {
+      "sha512": "gkhJ1uMfYnOH7hylbLx4VxeHHIpNWKEMXAZH3BJwUd+pkTGbm0etmL2dzHJLBrlblvTjZy4e9sg8Tpvkfetj7A==",
+      "type": "package",
+      "path": "microsoft.aspnetcore.cryptography.keyderivation/9.0.3",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net462/Microsoft.AspNetCore.Cryptography.KeyDerivation.dll",
+        "lib/net462/Microsoft.AspNetCore.Cryptography.KeyDerivation.xml",
+        "lib/net9.0/Microsoft.AspNetCore.Cryptography.KeyDerivation.dll",
+        "lib/net9.0/Microsoft.AspNetCore.Cryptography.KeyDerivation.xml",
+        "lib/netstandard2.0/Microsoft.AspNetCore.Cryptography.KeyDerivation.dll",
+        "lib/netstandard2.0/Microsoft.AspNetCore.Cryptography.KeyDerivation.xml",
+        "microsoft.aspnetcore.cryptography.keyderivation.9.0.3.nupkg.sha512",
+        "microsoft.aspnetcore.cryptography.keyderivation.nuspec"
+      ]
+    },
+    "Microsoft.AspNetCore.Identity.EntityFrameworkCore/9.0.3": {
+      "sha512": "qC4KdZVBI+aKRIcTVkepcfs0VDlcXT6yOQshyG4lDcBhWcingOGU87c19pQBqOB8cG9/cGpphet4xCgMBXQZrQ==",
+      "type": "package",
+      "path": "microsoft.aspnetcore.identity.entityframeworkcore/9.0.3",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net9.0/Microsoft.AspNetCore.Identity.EntityFrameworkCore.dll",
+        "lib/net9.0/Microsoft.AspNetCore.Identity.EntityFrameworkCore.xml",
+        "microsoft.aspnetcore.identity.entityframeworkcore.9.0.3.nupkg.sha512",
+        "microsoft.aspnetcore.identity.entityframeworkcore.nuspec"
+      ]
+    },
     "Microsoft.Data.Sqlite.Core/9.0.3": {
       "sha512": "rhNmI4KqeL6bOtZ7KwLVZLjrj0Bnf0PFq5Nlv2uOj9n1UuPYTbJaa816EJH5Hp5FM04H2iUcFtmmvqrl3xRCmA==",
       "type": "package",
@@ -1004,6 +1139,44 @@
         "useSharedDesignerContext.txt"
       ]
     },
+    "Microsoft.Extensions.Identity.Core/9.0.3": {
+      "sha512": "3cmtvVU2ejnXPI9drZNruEygs3utAtF+My9vcFomIN5nCDwVCQv2IJjZntJW0iyn2WM0epIsUGWdy+OfNNET8Q==",
+      "type": "package",
+      "path": "microsoft.extensions.identity.core/9.0.3",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net462/Microsoft.Extensions.Identity.Core.dll",
+        "lib/net462/Microsoft.Extensions.Identity.Core.xml",
+        "lib/net9.0/Microsoft.Extensions.Identity.Core.dll",
+        "lib/net9.0/Microsoft.Extensions.Identity.Core.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Identity.Core.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Identity.Core.xml",
+        "microsoft.extensions.identity.core.9.0.3.nupkg.sha512",
+        "microsoft.extensions.identity.core.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Identity.Stores/9.0.3": {
+      "sha512": "IlOCMVEXGZ2uKpbtKaAMdq6LEeIc3VXlH0SO2gxGckgI7LFSVGWpzmB0ebrQEeiVyzD4yDKS8UH9Pk0Zgpugfw==",
+      "type": "package",
+      "path": "microsoft.extensions.identity.stores/9.0.3",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net462/Microsoft.Extensions.Identity.Stores.dll",
+        "lib/net462/Microsoft.Extensions.Identity.Stores.xml",
+        "lib/net9.0/Microsoft.Extensions.Identity.Stores.dll",
+        "lib/net9.0/Microsoft.Extensions.Identity.Stores.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Identity.Stores.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Identity.Stores.xml",
+        "microsoft.extensions.identity.stores.9.0.3.nupkg.sha512",
+        "microsoft.extensions.identity.stores.nuspec"
+      ]
+    },
     "Microsoft.Extensions.Logging/9.0.3": {
       "sha512": "utIi2R1nm+PCWkvWBf1Ou6LWqg9iLfHU23r8yyU9VCvda4dEs7xbTZSwGa5KuwbpzpgCbHCIuKaFHB3zyFmnGw==",
       "type": "package",
@@ -1459,6 +1632,7 @@
     "net9.0": [
       "Asp.Versioning.Mvc >= 8.1.0",
       "Asp.Versioning.Mvc.ApiExplorer >= 8.1.0",
+      "Microsoft.AspNetCore.Identity.EntityFrameworkCore >= 9.0.3",
       "Microsoft.EntityFrameworkCore.Sqlite >= 9.0.3",
       "Serilog.Settings.Configuration >= 9.0.0",
       "Serilog.Sinks.Console >= 6.0.0",
@@ -1523,6 +1697,10 @@
             "target": "Package",
             "version": "[8.1.0, )"
           },
+          "Microsoft.AspNetCore.Identity.EntityFrameworkCore": {
+            "target": "Package",
+            "version": "[9.0.3, )"
+          },
           "Microsoft.EntityFrameworkCore.Sqlite": {
             "target": "Package",
             "version": "[9.0.3, )"
diff --git a/SibersProjectManager/obj/project.nuget.cache b/SibersProjectManager/obj/project.nuget.cache
index 16db280..be22b06 100644
--- a/SibersProjectManager/obj/project.nuget.cache
+++ b/SibersProjectManager/obj/project.nuget.cache
@@ -1,6 +1,6 @@
 {
   "version": 2,
-  "dgSpecHash": "kBh8XmsfHNo=",
+  "dgSpecHash": "jzlhvZHvxWU=",
   "success": true,
   "projectFilePath": "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
   "expectedPackageFiles": [
@@ -8,6 +8,9 @@
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\asp.versioning.http\\8.1.0\\asp.versioning.http.8.1.0.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\asp.versioning.mvc\\8.1.0\\asp.versioning.mvc.8.1.0.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\asp.versioning.mvc.apiexplorer\\8.1.0\\asp.versioning.mvc.apiexplorer.8.1.0.nupkg.sha512",
+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.aspnetcore.cryptography.internal\\9.0.3\\microsoft.aspnetcore.cryptography.internal.9.0.3.nupkg.sha512",
+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.aspnetcore.cryptography.keyderivation\\9.0.3\\microsoft.aspnetcore.cryptography.keyderivation.9.0.3.nupkg.sha512",
+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.aspnetcore.identity.entityframeworkcore\\9.0.3\\microsoft.aspnetcore.identity.entityframeworkcore.9.0.3.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.data.sqlite.core\\9.0.3\\microsoft.data.sqlite.core.9.0.3.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.entityframeworkcore\\9.0.3\\microsoft.entityframeworkcore.9.0.3.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.entityframeworkcore.abstractions\\9.0.3\\microsoft.entityframeworkcore.abstractions.9.0.3.nupkg.sha512",
@@ -22,6 +25,8 @@
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.dependencyinjection\\9.0.3\\microsoft.extensions.dependencyinjection.9.0.3.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.dependencyinjection.abstractions\\9.0.3\\microsoft.extensions.dependencyinjection.abstractions.9.0.3.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.dependencymodel\\9.0.3\\microsoft.extensions.dependencymodel.9.0.3.nupkg.sha512",
+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.identity.core\\9.0.3\\microsoft.extensions.identity.core.9.0.3.nupkg.sha512",
+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.identity.stores\\9.0.3\\microsoft.extensions.identity.stores.9.0.3.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.logging\\9.0.3\\microsoft.extensions.logging.9.0.3.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.logging.abstractions\\9.0.3\\microsoft.extensions.logging.abstractions.9.0.3.nupkg.sha512",
     "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.options\\9.0.3\\microsoft.extensions.options.9.0.3.nupkg.sha512",
diff --git a/diff.txt b/diff.txt
index a825ae7..b593378 100644
--- a/diff.txt
+++ b/diff.txt
@@ -1,475 +0,0 @@
-diff --git a/SibersProjectManager/Controllers/ProjectsController.cs b/SibersProjectManager/Controllers/ProjectsController.cs
-index f2693a9..08ddda7 100644
---- a/SibersProjectManager/Controllers/ProjectsController.cs
-+++ b/SibersProjectManager/Controllers/ProjectsController.cs
-@@ -24,7 +24,7 @@ namespace SibersProjectManager.Controllers
-         [HttpGet]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(IReadOnlyCollection<Project>), StatusCodes.Status200OK)]
--        public async Task<IActionResult> GetAll([FromQuery] int page = 1)
-+        public async Task<IActionResult> GetAsync([FromQuery] int page = 1)
-         {
-             var result = await _projectService.GetAsync(page);
-             if (result.IsSuccess)
-@@ -48,7 +48,7 @@ namespace SibersProjectManager.Controllers
-         [HttpPost("create")]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(int), StatusCodes.Status201Created)]
--        public async Task<ActionResult<Project>> Post(Project project)
-+        public async Task<ActionResult<Project>> CreateAsync(Project project)
-         {
-             if (!ModelState.IsValid)
-             {
-@@ -64,7 +64,9 @@ namespace SibersProjectManager.Controllers
-         }
- 
-         [HttpPost("{id}/assign-employees")]
--        public async Task<IActionResult> AssignEmployees([FromRoute] int id, IReadOnlyCollection<int> employeeIds)
-+        [MapToApiVersion(1)]
-+        [ProducesResponseType(typeof(bool), StatusCodes.Status200OK)]
-+        public async Task<IActionResult> AssignEmployeesAsync([FromRoute] int id, IReadOnlyCollection<int> employeeIds)
-         {
-             if (employeeIds is null || !employeeIds.Any())
-             {
-diff --git a/SibersProjectManager/Controllers/TaskController.cs b/SibersProjectManager/Controllers/TaskController.cs
-index eb0a471..b1ac343 100644
---- a/SibersProjectManager/Controllers/TaskController.cs
-+++ b/SibersProjectManager/Controllers/TaskController.cs
-@@ -3,7 +3,6 @@ using Microsoft.AspNetCore.Mvc;
- using SibersProjectManager.Interfaces;
- using SibersProjectManager.Models;
- using SibersProjectManager.Models.Enums;
--using TaskStatus = SibersProjectManager.Models.Enums.TaskStatus;
- 
- namespace SibersProjectManager.Controllers
- {
-@@ -25,7 +24,7 @@ namespace SibersProjectManager.Controllers
-         [HttpGet]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(IReadOnlyCollection<ProjectTask>), StatusCodes.Status200OK)]
--        public async Task<IActionResult> GetAll(
-+        public async Task<IActionResult> GetAsync(
-             [FromQuery] int projectId,
-             [FromQuery] int page = 1,
-             [FromQuery] TaskStatus? status = null)
-@@ -40,7 +39,7 @@ namespace SibersProjectManager.Controllers
-         [HttpGet("{id:int}")]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(ProjectTask), StatusCodes.Status200OK)]
--        public async Task<IActionResult> GetById([FromRoute] int id)
-+        public async Task<IActionResult> GetByIdAsync([FromRoute] int id)
-         {
-             var result = await _taskService.GetByIdAsync(id);
-             if (result.IsSuccess)
-@@ -52,7 +51,7 @@ namespace SibersProjectManager.Controllers
-         [HttpPost("create")]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(int), StatusCodes.Status201Created)]
--        public async Task<IActionResult> Create([FromBody] ProjectTask task)
-+        public async Task<IActionResult> CreateAsync([FromBody] ProjectTask task)
-         {
-             if (!ModelState.IsValid)
-             {
-@@ -62,7 +61,7 @@ namespace SibersProjectManager.Controllers
- 
-             var result = await _taskService.CreateAsync(task);
-             if (result.IsSuccess)
--                return CreatedAtAction(nameof(GetById), new { id = result.Value }, result.Value);
-+                return CreatedAtAction(nameof(GetByIdAsync), new { id = result.Value }, result.Value);
- 
-             return BadRequest(result.ErrorMessage);
-         }
-@@ -70,7 +69,7 @@ namespace SibersProjectManager.Controllers
-         [HttpPut("update")]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(bool), StatusCodes.Status200OK)]
--        public async Task<IActionResult> Update([FromBody] ProjectTask task)
-+        public async Task<IActionResult> UpdateAsync([FromBody] ProjectTask task)
-         {
-             if (!ModelState.IsValid)
-             {
-@@ -88,7 +87,7 @@ namespace SibersProjectManager.Controllers
-         [HttpDelete("{id:int}")]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(int), StatusCodes.Status200OK)]
--        public async Task<IActionResult> Delete([FromRoute] int id)
-+        public async Task<IActionResult> DeleteAsync([FromRoute] int id)
-         {
-             var result = await _taskService.DeleteAsync(id);
-             if (result.IsSuccess)
-@@ -97,10 +96,10 @@ namespace SibersProjectManager.Controllers
-             return NotFound(result.ErrorMessage);
-         }
- 
--        [HttpPost("{id}/assign-executor")]
-+        [HttpPost("{id:int}/assign-executor")]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(bool), StatusCodes.Status200OK)]
--        public async Task<IActionResult> AssignExecutor([FromRoute] int id, [FromQuery] int executorId)
-+        public async Task<IActionResult> AssignExecutorAsync([FromRoute] int id, [FromQuery] int executorId)
-         {
-             var result = await _taskService.AssignExecutorAsync(id, executorId);
-             if (result.IsSuccess)
-@@ -109,10 +108,10 @@ namespace SibersProjectManager.Controllers
-             return BadRequest(result.ErrorMessage);
-         }
- 
--        [HttpPut("{id}/change-status")]
-+        [HttpPut("{id:int}/change-status")]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(bool), StatusCodes.Status200OK)]
--        public async Task<IActionResult> ChangeStatus([FromRoute] int id, [FromQuery] TaskStatus newStatus)
-+        public async Task<IActionResult> ChangeStatusAsync([FromRoute] int id, [FromQuery] TaskStatus newStatus)
-         {
-             var result = await _taskService.ChangeStatusAsync(id, newStatus);
-             if (result.IsSuccess)
-@@ -124,7 +123,7 @@ namespace SibersProjectManager.Controllers
-         [HttpGet("filter")]
-         [MapToApiVersion(1)]
-         [ProducesResponseType(typeof(IReadOnlyCollection<ProjectTask>), StatusCodes.Status200OK)]
--        public async Task<IActionResult> GetFiltered(
-+        public async Task<IActionResult> GetFilteredAsync(
-             [FromQuery] int page = 1,
-             [FromQuery] TaskStatus? status = null,
-             [FromQuery] int? projectId = null,
-diff --git a/SibersProjectManager/Models/Enums/Priority.cs b/SibersProjectManager/Models/Enums/Priority.cs
-index e69de29..118b74e 100644
---- a/SibersProjectManager/Models/Enums/Priority.cs
-+++ b/SibersProjectManager/Models/Enums/Priority.cs
-@@ -0,0 +1,9 @@
-+namespace SibersProjectManager.Models.Enums
-+{
-+    internal enum Priority : byte
-+    {
-+        Low,
-+        Medium,
-+        High
-+    }
-+}
-\ No newline at end of file
-diff --git a/SibersProjectManager/Models/Project.cs b/SibersProjectManager/Models/Project.cs
-index 47f1c97..010e710 100644
---- a/SibersProjectManager/Models/Project.cs
-+++ b/SibersProjectManager/Models/Project.cs
-@@ -1,4 +1,5 @@
- using System.ComponentModel.DataAnnotations;
-+using SibersProjectManager.Models.Enums;
- 
- namespace SibersProjectManager.Models
- {
-@@ -17,7 +18,7 @@ namespace SibersProjectManager.Models
-         [Required, MaxLength(200)]
-         public string ContractorCompany { get; init; } = string.Empty;
- 
--        public int Priority { get; set; }
-+        public Priority Priority { get; set; }
- 
-         public int? ProjectManagerId { get; init; }
-         public Employee ProjectManager { get; init; } = new();
-diff --git a/SibersProjectManager/Models/ProjectEmployee.cs b/SibersProjectManager/Models/ProjectEmployee.cs
-index e69de29..292f48c 100644
---- a/SibersProjectManager/Models/ProjectEmployee.cs
-+++ b/SibersProjectManager/Models/ProjectEmployee.cs
-@@ -0,0 +1,11 @@
-+namespace SibersProjectManager.Models
-+{
-+    internal sealed record ProjectEmployee
-+    {
-+        public int EmployeeId { get; init; }
-+        public Employee Employee { get; init; } = new();
-+
-+        public int ProjectId { get; init; }
-+        public Project Project { get; init; } = new();
-+    }
-+}
-\ No newline at end of file
-diff --git a/SibersProjectManager/Models/ProjectTask.cs b/SibersProjectManager/Models/ProjectTask.cs
-index 623899a..4d61dbf 100644
---- a/SibersProjectManager/Models/ProjectTask.cs
-+++ b/SibersProjectManager/Models/ProjectTask.cs
-@@ -12,13 +12,13 @@ namespace SibersProjectManager.Models
- 
-         [MaxLength(500)]
-         public string Comment { get; init; } = string.Empty;
--        public Enums.TaskStatus Status { get; init; }
-+        public TaskStatus Status { get; set; }
-         public Priority Priority { get; init; } = Priority.Low;
- 
-         public int AuthorId { get; init; }
-         public Employee Author { get; init; } = new();
- 
--        public int? AssigneeId { get; init; }
-+        public int? AssigneeId { get; set; }
-         public Employee Assignee { get; init; } = new();
- 
-         public int ProjectId { get; init; }
-diff --git a/SibersProjectManager/Services/TaskService.cs b/SibersProjectManager/Services/TaskService.cs
-index f25d3a1..4a9a228 100644
---- a/SibersProjectManager/Services/TaskService.cs
-+++ b/SibersProjectManager/Services/TaskService.cs
-@@ -15,7 +15,7 @@ namespace SibersProjectManager.Services
-         private const int _pageSize = 10;
- 
-         public async Task<Result<IReadOnlyCollection<ProjectTask>>> GetAsync(
--            int projectId, int page, Models.Enums.TaskStatus? status)
-+            int projectId, int page, TaskStatus? status)
-         {
-             if (page < 1)
-                 page = 1;
-diff --git a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfo.cs b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfo.cs
-index 1ac1428..fd45226 100644
---- a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfo.cs
-+++ b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfo.cs
-@@ -13,7 +13,7 @@ using System.Reflection;
- [assembly: System.Reflection.AssemblyCompanyAttribute("SibersProjectManager")]
- [assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
- [assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
--[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0")]
-+[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0+753a559df00da204820824f27eb481c852a2c8d6")]
- [assembly: System.Reflection.AssemblyProductAttribute("SibersProjectManager")]
- [assembly: System.Reflection.AssemblyTitleAttribute("SibersProjectManager")]
- [assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
-diff --git a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfoInputs.cache b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfoInputs.cache
-index ea3e690..c0c7528 100644
---- a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfoInputs.cache
-+++ b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.AssemblyInfoInputs.cache
-@@ -1 +1 @@
--e26e55df17abeac6a039c9fd0027fb41112f52da3bf3eca106030bad886bad23
-+4ced77aa973d82d68168017f8893001120d6ee642bc3d8d56c77dc2ef8d35f16
-diff --git a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.GeneratedMSBuildEditorConfig.editorconfig b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.GeneratedMSBuildEditorConfig.editorconfig
-index 01f3138..8eba143 100644
---- a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.GeneratedMSBuildEditorConfig.editorconfig
-+++ b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.GeneratedMSBuildEditorConfig.editorconfig
-@@ -9,41 +9,41 @@ build_property.EnforceExtendedAnalyzerRules =
- build_property._SupportedPlatformList = Linux,macOS,Windows
- build_property.RootNamespace = SibersProjectManager
- build_property.RootNamespace = SibersProjectManager
--build_property.ProjectDir = C:\Users\G-COMP\Desktop\source\SibersProjectManager\SibersProjectManager\
-+build_property.ProjectDir = C:\Users\erkubanychbekov\source\repos\dev\SibersProjectManager\SibersProjectManager\
- build_property.EnableComHosting = 
- build_property.EnableGeneratedComInterfaceComImportInterop = 
- build_property.RazorLangVersion = 9.0
- build_property.SupportLocalizedComponentNames = 
- build_property.GenerateRazorMetadataSourceChecksumAttributes = 
--build_property.MSBuildProjectDirectory = C:\Users\G-COMP\Desktop\source\SibersProjectManager\SibersProjectManager
-+build_property.MSBuildProjectDirectory = C:\Users\erkubanychbekov\source\repos\dev\SibersProjectManager\SibersProjectManager
- build_property._RazorSourceGeneratorDebug = 
- build_property.EffectiveAnalysisLevelStyle = 9.0
- build_property.EnableCodeStyleSeverity = 
- 
--[C:/Users/G-COMP/Desktop/source/SibersProjectManager/SibersProjectManager/Views/Home/Index.cshtml]
-+[C:/Users/erkubanychbekov/source/repos/dev/SibersProjectManager/SibersProjectManager/Views/Home/Index.cshtml]
- build_metadata.AdditionalFiles.TargetPath = Vmlld3NcSG9tZVxJbmRleC5jc2h0bWw=
- build_metadata.AdditionalFiles.CssScope = 
- 
--[C:/Users/G-COMP/Desktop/source/SibersProjectManager/SibersProjectManager/Views/Home/Privacy.cshtml]
-+[C:/Users/erkubanychbekov/source/repos/dev/SibersProjectManager/SibersProjectManager/Views/Home/Privacy.cshtml]
- build_metadata.AdditionalFiles.TargetPath = Vmlld3NcSG9tZVxQcml2YWN5LmNzaHRtbA==
- build_metadata.AdditionalFiles.CssScope = 
- 
--[C:/Users/G-COMP/Desktop/source/SibersProjectManager/SibersProjectManager/Views/Shared/Error.cshtml]
-+[C:/Users/erkubanychbekov/source/repos/dev/SibersProjectManager/SibersProjectManager/Views/Shared/Error.cshtml]
- build_metadata.AdditionalFiles.TargetPath = Vmlld3NcU2hhcmVkXEVycm9yLmNzaHRtbA==
- build_metadata.AdditionalFiles.CssScope = 
- 
--[C:/Users/G-COMP/Desktop/source/SibersProjectManager/SibersProjectManager/Views/Shared/_ValidationScriptsPartial.cshtml]
-+[C:/Users/erkubanychbekov/source/repos/dev/SibersProjectManager/SibersProjectManager/Views/Shared/_ValidationScriptsPartial.cshtml]
- build_metadata.AdditionalFiles.TargetPath = Vmlld3NcU2hhcmVkXF9WYWxpZGF0aW9uU2NyaXB0c1BhcnRpYWwuY3NodG1s
- build_metadata.AdditionalFiles.CssScope = 
- 
--[C:/Users/G-COMP/Desktop/source/SibersProjectManager/SibersProjectManager/Views/_ViewImports.cshtml]
-+[C:/Users/erkubanychbekov/source/repos/dev/SibersProjectManager/SibersProjectManager/Views/_ViewImports.cshtml]
- build_metadata.AdditionalFiles.TargetPath = Vmlld3NcX1ZpZXdJbXBvcnRzLmNzaHRtbA==
- build_metadata.AdditionalFiles.CssScope = 
- 
--[C:/Users/G-COMP/Desktop/source/SibersProjectManager/SibersProjectManager/Views/_ViewStart.cshtml]
-+[C:/Users/erkubanychbekov/source/repos/dev/SibersProjectManager/SibersProjectManager/Views/_ViewStart.cshtml]
- build_metadata.AdditionalFiles.TargetPath = Vmlld3NcX1ZpZXdTdGFydC5jc2h0bWw=
- build_metadata.AdditionalFiles.CssScope = 
- 
--[C:/Users/G-COMP/Desktop/source/SibersProjectManager/SibersProjectManager/Views/Shared/_Layout.cshtml]
-+[C:/Users/erkubanychbekov/source/repos/dev/SibersProjectManager/SibersProjectManager/Views/Shared/_Layout.cshtml]
- build_metadata.AdditionalFiles.TargetPath = Vmlld3NcU2hhcmVkXF9MYXlvdXQuY3NodG1s
- build_metadata.AdditionalFiles.CssScope = b-8snsv0chdz
-diff --git a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.assets.cache b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.assets.cache
-index a0b5b37..2014936 100644
-Binary files a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.assets.cache and b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.assets.cache differ
-diff --git a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.csproj.AssemblyReference.cache b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.csproj.AssemblyReference.cache
-index b66283a..3e15582 100644
-Binary files a/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.csproj.AssemblyReference.cache and b/SibersProjectManager/obj/Debug/net9.0/SibersProjectManager.csproj.AssemblyReference.cache differ
-diff --git a/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.dgspec.json b/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.dgspec.json
-index aa9914b..d3a93ab 100644
---- a/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.dgspec.json
-+++ b/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.dgspec.json
-@@ -1,25 +1,31 @@
- {
-   "format": 1,
-   "restore": {
--    "C:\\Users\\G-COMP\\Desktop\\source\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj": {}
-+    "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj": {}
-   },
-   "projects": {
--    "C:\\Users\\G-COMP\\Desktop\\source\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj": {
-+    "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj": {
-       "version": "1.0.0",
-       "restore": {
--        "projectUniqueName": "C:\\Users\\G-COMP\\Desktop\\source\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
-+        "projectUniqueName": "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
-         "projectName": "SibersProjectManager",
--        "projectPath": "C:\\Users\\G-COMP\\Desktop\\source\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
--        "packagesPath": "C:\\Users\\G-COMP\\.nuget\\packages\\",
--        "outputPath": "C:\\Users\\G-COMP\\Desktop\\source\\SibersProjectManager\\SibersProjectManager\\obj\\",
-+        "projectPath": "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
-+        "packagesPath": "C:\\Users\\erkubanychbekov\\.nuget\\packages\\",
-+        "outputPath": "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\obj\\",
-         "projectStyle": "PackageReference",
-+        "fallbackFolders": [
-+          "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
-+        ],
-         "configFilePaths": [
--          "C:\\Users\\G-COMP\\AppData\\Roaming\\NuGet\\NuGet.Config"
-+          "C:\\Users\\erkubanychbekov\\AppData\\Roaming\\NuGet\\NuGet.Config",
-+          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
-+          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
-         ],
-         "originalTargetFrameworks": [
-           "net9.0"
-         ],
-         "sources": {
-+          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
-           "https://api.nuget.org/v3/index.json": {}
-         },
-         "frameworks": {
-diff --git a/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.g.props b/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.g.props
-index 6dd602e..3e3160e 100644
---- a/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.g.props
-+++ b/SibersProjectManager/obj/SibersProjectManager.csproj.nuget.g.props
-@@ -5,12 +5,13 @@
-     <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
-     <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
-     <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">$(UserProfile)\.nuget\packages\</NuGetPackageRoot>
--    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">C:\Users\G-COMP\.nuget\packages\</NuGetPackageFolders>
-+    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">C:\Users\erkubanychbekov\.nuget\packages\;C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages</NuGetPackageFolders>
-     <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
-     <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">6.13.0</NuGetToolVersion>
-   </PropertyGroup>
-   <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
--    <SourceRoot Include="C:\Users\G-COMP\.nuget\packages\" />
-+    <SourceRoot Include="C:\Users\erkubanychbekov\.nuget\packages\" />
-+    <SourceRoot Include="C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages\" />
-   </ItemGroup>
-   <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
-     <Import Project="$(NuGetPackageRoot)microsoft.entityframeworkcore\9.0.3\buildTransitive\net8.0\Microsoft.EntityFrameworkCore.props" Condition="Exists('$(NuGetPackageRoot)microsoft.entityframeworkcore\9.0.3\buildTransitive\net8.0\Microsoft.EntityFrameworkCore.props')" />
-diff --git a/SibersProjectManager/obj/project.assets.json b/SibersProjectManager/obj/project.assets.json
-index 22f5220..fa0abfc 100644
---- a/SibersProjectManager/obj/project.assets.json
-+++ b/SibersProjectManager/obj/project.assets.json
-@@ -1250,24 +1250,31 @@
-     ]
-   },
-   "packageFolders": {
--    "C:\\Users\\G-COMP\\.nuget\\packages\\": {}
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\": {},
-+    "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages": {}
-   },
-   "project": {
-     "version": "1.0.0",
-     "restore": {
--      "projectUniqueName": "C:\\Users\\G-COMP\\Desktop\\source\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
-+      "projectUniqueName": "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
-       "projectName": "SibersProjectManager",
--      "projectPath": "C:\\Users\\G-COMP\\Desktop\\source\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
--      "packagesPath": "C:\\Users\\G-COMP\\.nuget\\packages\\",
--      "outputPath": "C:\\Users\\G-COMP\\Desktop\\source\\SibersProjectManager\\SibersProjectManager\\obj\\",
-+      "projectPath": "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
-+      "packagesPath": "C:\\Users\\erkubanychbekov\\.nuget\\packages\\",
-+      "outputPath": "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\obj\\",
-       "projectStyle": "PackageReference",
-+      "fallbackFolders": [
-+        "C:\\Program Files (x86)\\Microsoft Visual Studio\\Shared\\NuGetPackages"
-+      ],
-       "configFilePaths": [
--        "C:\\Users\\G-COMP\\AppData\\Roaming\\NuGet\\NuGet.Config"
-+        "C:\\Users\\erkubanychbekov\\AppData\\Roaming\\NuGet\\NuGet.Config",
-+        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.FallbackLocation.config",
-+        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
-       ],
-       "originalTargetFrameworks": [
-         "net9.0"
-       ],
-       "sources": {
-+        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
-         "https://api.nuget.org/v3/index.json": {}
-       },
-       "frameworks": {
-diff --git a/SibersProjectManager/obj/project.nuget.cache b/SibersProjectManager/obj/project.nuget.cache
-index eb1f62d..b052844 100644
---- a/SibersProjectManager/obj/project.nuget.cache
-+++ b/SibersProjectManager/obj/project.nuget.cache
-@@ -1,36 +1,36 @@
- {
-   "version": 2,
--  "dgSpecHash": "VLnF49LPt5o=",
-+  "dgSpecHash": "2wmvYKVDTT8=",
-   "success": true,
--  "projectFilePath": "C:\\Users\\G-COMP\\Desktop\\source\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
-+  "projectFilePath": "C:\\Users\\erkubanychbekov\\source\\repos\\dev\\SibersProjectManager\\SibersProjectManager\\SibersProjectManager.csproj",
-   "expectedPackageFiles": [
--    "C:\\Users\\G-COMP\\.nuget\\packages\\asp.versioning.abstractions\\8.1.0\\asp.versioning.abstractions.8.1.0.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\asp.versioning.http\\8.1.0\\asp.versioning.http.8.1.0.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\asp.versioning.mvc\\8.1.0\\asp.versioning.mvc.8.1.0.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\asp.versioning.mvc.apiexplorer\\8.1.0\\asp.versioning.mvc.apiexplorer.8.1.0.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.data.sqlite.core\\9.0.3\\microsoft.data.sqlite.core.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.entityframeworkcore\\9.0.3\\microsoft.entityframeworkcore.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.entityframeworkcore.abstractions\\9.0.3\\microsoft.entityframeworkcore.abstractions.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.entityframeworkcore.analyzers\\9.0.3\\microsoft.entityframeworkcore.analyzers.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.entityframeworkcore.relational\\9.0.3\\microsoft.entityframeworkcore.relational.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.entityframeworkcore.sqlite\\9.0.3\\microsoft.entityframeworkcore.sqlite.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.entityframeworkcore.sqlite.core\\9.0.3\\microsoft.entityframeworkcore.sqlite.core.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.caching.abstractions\\9.0.3\\microsoft.extensions.caching.abstractions.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.caching.memory\\9.0.3\\microsoft.extensions.caching.memory.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.configuration.abstractions\\9.0.3\\microsoft.extensions.configuration.abstractions.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.dependencyinjection\\9.0.3\\microsoft.extensions.dependencyinjection.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.dependencyinjection.abstractions\\9.0.3\\microsoft.extensions.dependencyinjection.abstractions.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.dependencymodel\\9.0.3\\microsoft.extensions.dependencymodel.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.logging\\9.0.3\\microsoft.extensions.logging.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.logging.abstractions\\9.0.3\\microsoft.extensions.logging.abstractions.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.options\\9.0.3\\microsoft.extensions.options.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\microsoft.extensions.primitives\\9.0.3\\microsoft.extensions.primitives.9.0.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\sqlitepclraw.bundle_e_sqlite3\\2.1.10\\sqlitepclraw.bundle_e_sqlite3.2.1.10.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\sqlitepclraw.core\\2.1.10\\sqlitepclraw.core.2.1.10.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\sqlitepclraw.lib.e_sqlite3\\2.1.10\\sqlitepclraw.lib.e_sqlite3.2.1.10.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\sqlitepclraw.provider.e_sqlite3\\2.1.10\\sqlitepclraw.provider.e_sqlite3.2.1.10.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\system.memory\\4.5.3\\system.memory.4.5.3.nupkg.sha512",
--    "C:\\Users\\G-COMP\\.nuget\\packages\\system.text.json\\9.0.3\\system.text.json.9.0.3.nupkg.sha512"
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\asp.versioning.abstractions\\8.1.0\\asp.versioning.abstractions.8.1.0.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\asp.versioning.http\\8.1.0\\asp.versioning.http.8.1.0.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\asp.versioning.mvc\\8.1.0\\asp.versioning.mvc.8.1.0.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\asp.versioning.mvc.apiexplorer\\8.1.0\\asp.versioning.mvc.apiexplorer.8.1.0.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.data.sqlite.core\\9.0.3\\microsoft.data.sqlite.core.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.entityframeworkcore\\9.0.3\\microsoft.entityframeworkcore.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.entityframeworkcore.abstractions\\9.0.3\\microsoft.entityframeworkcore.abstractions.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.entityframeworkcore.analyzers\\9.0.3\\microsoft.entityframeworkcore.analyzers.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.entityframeworkcore.relational\\9.0.3\\microsoft.entityframeworkcore.relational.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.entityframeworkcore.sqlite\\9.0.3\\microsoft.entityframeworkcore.sqlite.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.entityframeworkcore.sqlite.core\\9.0.3\\microsoft.entityframeworkcore.sqlite.core.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.caching.abstractions\\9.0.3\\microsoft.extensions.caching.abstractions.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.caching.memory\\9.0.3\\microsoft.extensions.caching.memory.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.configuration.abstractions\\9.0.3\\microsoft.extensions.configuration.abstractions.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.dependencyinjection\\9.0.3\\microsoft.extensions.dependencyinjection.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.dependencyinjection.abstractions\\9.0.3\\microsoft.extensions.dependencyinjection.abstractions.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.dependencymodel\\9.0.3\\microsoft.extensions.dependencymodel.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.logging\\9.0.3\\microsoft.extensions.logging.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.logging.abstractions\\9.0.3\\microsoft.extensions.logging.abstractions.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.options\\9.0.3\\microsoft.extensions.options.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\microsoft.extensions.primitives\\9.0.3\\microsoft.extensions.primitives.9.0.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\sqlitepclraw.bundle_e_sqlite3\\2.1.10\\sqlitepclraw.bundle_e_sqlite3.2.1.10.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\sqlitepclraw.core\\2.1.10\\sqlitepclraw.core.2.1.10.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\sqlitepclraw.lib.e_sqlite3\\2.1.10\\sqlitepclraw.lib.e_sqlite3.2.1.10.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\sqlitepclraw.provider.e_sqlite3\\2.1.10\\sqlitepclraw.provider.e_sqlite3.2.1.10.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\system.memory\\4.5.3\\system.memory.4.5.3.nupkg.sha512",
-+    "C:\\Users\\erkubanychbekov\\.nuget\\packages\\system.text.json\\9.0.3\\system.text.json.9.0.3.nupkg.sha512"
-   ],
-   "logs": []
- }
-\ No newline at end of file
